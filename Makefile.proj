CXXFLAGS += -fPIC
CFLAGS += -fPIC

CFLAGS += -D_BSD_SOURCE # otherwise realpath is not defined.

SRCS_C += src/builtin.c
SRCS_C += src/gf.c
SRCS_C += src/integer.c
SRCS_C += src/range.c
SRCS_C += src/print.c
SRCS_C += src/array.c
SRCS_C += src/tuple.c
SRCS_C += src/str.c
SRCS_C += src/other.c
SRCS_C += sys/sys.c
SRCS_C += os/path/pathstr.c

libbuiltin.so: $(filter src/%, $(OBJS))
	$(CC) -shared -Wl,-soname,$@ -o $@ $^  $(LDFLAGS)


install_files += $(libdir)/voba/core/libbuiltin.so
$(libdir)/voba/core/libbuiltin.so: libbuiltin.so
	$(INSTALL) $< $@

install_files += $(libdir)/voba/core/builtin.h
$(libdir)/voba/core/builtin.h : src/builtin.h
	$(INSTALL) $< $@

MODULES +=sys
MODULES +=os/path

define MODULE_RECIPE
$1lib$2.so: $(filter $1%, $(OBJS))
	$$(CC) -shared -Wl,-soname,$$@ -o $$@ $$^  $(LDFLAGS)

install_files += $(libdir)/voba/core/$1lib$2.so
$(libdir)/voba/core/$1lib$2.so: $1lib$2.so
	mkdir -p $(libdir)/voba/core/$1 2>/dev/null; $$(INSTALL) $$< $$@

install_files += $(libdir)/voba/core/$1$2.h
$(libdir)/voba/core/$1$2.h : $1$2/$2.h
	mkdir -p $(libdir)/voba/core/$1 2>/dev/null; $$(INSTALL) $$< $$@
endef

test1:
	echo $(foreach module, $(MODULES), $(dir $(module)))
test2:
	echo $(foreach module, $(MODULES), $(call MODULE_RECIPE,$(dir $(module)),$(notdir $(module)),$(module))))

$(foreach module, $(MODULES), $(eval $(call MODULE_RECIPE,$(dir $(module)),$(notdir $(module)),$(module))))
dirs += $(libdir)/voba/core

test:
	echo $(MODULES_SO)
# Local Variables:
# mode:makefile
# coding: utf-8-unix
# End:
